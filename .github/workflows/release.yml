on:
  push:
    tags:
      - "v*"

name: Create Release

jobs:
  build-mac:
    name: Build on Mac
    runs-on: macos-latest
    strategy:
      matrix:
        os: [darwin]
        arch: [amd64, arm64]
    steps:
      - name: Set RELEASE_VERSION
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.18"
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Build Code
        env:
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: "1"
        run: go build -ldflags="-X 'github.com/mathspace/kubectl-credentials-helper/cmd.Version==${{ env.RELEASE_VERSION }}'" -o build/kubectl-credentials-helper-${{ matrix.os }}-${{ matrix.arch }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: kubectl-credentials-helper
          path: build/kubectl-credentials-helper-${{ matrix.os }}-${{ matrix.arch }}
  build-linux:
    name: Build on Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux]
        arch: [amd64]
    steps:
      - name: Set RELEASE_VERSION
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.18"
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Build Code
        env:
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: "1"
        run: go build -ldflags="-X 'github.com/mathspace/kubectl-credentials-helper/cmd.Version==${{ env.RELEASE_VERSION }}'" -o build/kubectl-credentials-helper-${{ matrix.os }}-${{ matrix.arch }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: kubectl-credentials-helper
          path: build/kubectl-credentials-helper-${{ matrix.os }}-${{ matrix.arch }}
  build-windows:
    name: Build on Windows
    runs-on: windows-latest
    strategy:
      matrix:
        os: [windows]
        arch: [amd64, arm64]
    steps:
      - name: Set RELEASE_VERSION
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.18"
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Build Code
        env:
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: "1"
        run: go build -ldflags="-X 'github.com/mathspace/kubectl-credentials-helper/cmd.Version==${{ env.RELEASE_VERSION }}'" -o build/kubectl-credentials-helper-${{ matrix.os }}-${{ matrix.arch }}.exe
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: kubectl-credentials-helper
          path: build/kubectl-credentials-helper-${{ matrix.os }}-${{ matrix.arch }}.exe
  release:
    name: Draft Release
    runs-on: ubuntu-latest
    needs:
      - build-mac
      - build-linux
      - build-windows
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: kubectl-credentials-helper
          path: kubectl-credentials-helper
      - name: Generate SHA256SUMS
        run: |
          cd kubectl-credentials-helper && sha256sum * > SHA256SUMS
      - name: List Artifacts
        run: echo "ARTIFACTS=$(echo kubectl-credentials-helper/*)" >> $GITHUB_ENV
      - name: Release
        uses: docker://antonyurchenko/git-release:v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DRAFT_RELEASE: "true"
          PRE_RELEASE: "false"
          CHANGELOG_FILE: "CHANGELOG.md"
          ALLOW_EMPTY_CHANGELOG: "false"
        with:
          args: |
            ${{ env.ARTIFACTS }}
